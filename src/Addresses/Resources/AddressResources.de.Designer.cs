//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Avolutions.Baf.Domain.Addresses.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AddressResources_de {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AddressResources_de() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Avolutions.Baf.Domain.Addresses.Resources.AddressResources.de", typeof(AddressResources_de).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adresszusatz.
        /// </summary>
        internal static string Field_AdditionalLine {
            get {
                return ResourceManager.GetString("Field.AdditionalLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ort.
        /// </summary>
        internal static string Field_City {
            get {
                return ResourceManager.GetString("Field.City", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Land.
        /// </summary>
        internal static string Field_Country {
            get {
                return ResourceManager.GetString("Field.Country", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breitengrad.
        /// </summary>
        internal static string Field_Latitude {
            get {
                return ResourceManager.GetString("Field.Latitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Längengrad.
        /// </summary>
        internal static string Field_Longitude {
            get {
                return ResourceManager.GetString("Field.Longitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Straße.
        /// </summary>
        internal static string Field_Street {
            get {
                return ResourceManager.GetString("Field.Street", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PLZ.
        /// </summary>
        internal static string Field_ZipCode {
            get {
                return ResourceManager.GetString("Field.ZipCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adressen.
        /// </summary>
        internal static string Name_Plural {
            get {
                return ResourceManager.GetString("Name.Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adresse.
        /// </summary>
        internal static string Name_Singular {
            get {
                return ResourceManager.GetString("Name.Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Die Koordinaten sind nur gültig, wenn sowohl {0} als auch {1} angegeben werden..
        /// </summary>
        internal static string Validation_Coords_BothOrNone {
            get {
                return ResourceManager.GetString("Validation.Coords.BothOrNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} muss zwischen {1} und {2} liegen..
        /// </summary>
        internal static string Validation_Coords_Range {
            get {
                return ResourceManager.GetString("Validation.Coords.Range", resourceCulture);
            }
        }
    }
}
